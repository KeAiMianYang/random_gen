#include "PerlinNoise.hpp"

#include <cstdarg>

#include "PlainArray.hpp"
#include "Generator.hpp"
#include "Strategy.hpp"

int* PerlinNoise::generate_perlinNoise_1D(Strategy strategy, int min, int max, int size){
  PlainArray p = generate_perlinNoise(strategy, min, max, 1, size);
}
int** PerlinNoise::generate_perlinNoise_2D(Strategy strategy, int min, int max, int sizeX, int sizeY){
  PlainArray p = generate_perlinNoise(strategy, min, max, 2, sizeX, sizeY);
}
int*** PerlinNoise::generate_perlinNoise_3D(Strategy strategy, int min, int max, int sizeX, int sizeY, int sizeZ){
  PlainArray p = generate_perlinNoise(strategy, min, max, 3, sizeX, sizeY, sizeZ);
}
PlainArray* PerlinNoise::generate_PerlinNoise(Strategy strategy, int min, int max, int dimension, ...){ // needs to include a library
  
  return ptrnull;
}
int* PerlinNoise::convert_one_dim(PlainArray plainArray){
  int* p;
  return p;
}
int** PerlinNoise::convert_two_dim(PlainArray plainArray){
  int** p;
  return p;
}
int*** PerlinNoise::convert_three_dim(PlainArray plainArray){
  int*** p;
  return p;
}
